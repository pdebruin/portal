<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">using</font> System;
<font color= "blue">using</font> System.Collections;
<font color= "blue">using</font> System.ComponentModel;
<font color= "blue">using</font> System.Data;
<font color= "blue">using</font> System.Drawing;
<font color= "blue">using</font> System.Web;
<font color= "blue">using</font> System.Web.UI;
<font color= "blue">using</font> System.Web.UI.WebControls;
<font color= "blue">using</font> System.Web.UI.HtmlControls;
<font color= "blue">using</font> System.Data.SqlClient;
<font color= "blue"></font>
<font color= "blue">namespace</font> ASPNET.StarterKit.Portal {
<font color= "blue"></font>
<font color= "blue">    public </font>abstract class DesktopModuleTitle : System.Web.UI.UserControl {
<font color= "blue">        protected </font>System.Web.UI.WebControls.Label ModuleTitle;
<font color= "blue">        protected </font>System.Web.UI.WebControls.HyperLink EditButton;
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">        public </font>String EditText = null;
<font color= "blue">        public </font>String EditUrl  = null;
<font color= "blue">        public </font>String EditTarget = null;
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Load(object sender, System.EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Obtain PortalSettings from Current Context</font>
<font color= "blue">            </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "green">            // Obtain reference to parent portal module</font>
<font color= "blue">            </font>PortalModuleControl portalModule = (PortalModuleControl) this.Parent;
<font color= "blue"></font>
<font color= "green">            // Display Modular Title Text and Edit Buttons</font>
<font color= "blue">            </font>ModuleTitle.Text = portalModule.ModuleConfiguration.ModuleTitle;
<font color= "blue"></font>
<font color= "green">            // Display the Edit button if the parent portalmodule has configured the PortalModuleTitle User Control</font>
<font color= "green">            // to display it -- and the current client has edit access permissions</font>
<font color= "blue"></font><font color= "blue">            if </font>((portalSettings.AlwaysShowEditButton == true) || (PortalSecurity.IsInRoles(portalModule.ModuleConfiguration.AuthorizedEditRoles)) && (EditText != null)) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                </font>EditButton.Text = EditText;
<font color= "blue">                </font>EditButton.NavigateUrl = EditUrl + "?mid=" + portalModule.ModuleId.ToString();
<font color= "blue">                </font>EditButton.Target = EditTarget;
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue">        </font>
<font color= "blue">        public </font>DesktopModuleTitle() {
<font color= "blue">            </font>this.Init += new System.EventHandler(Page_Init);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Init(object sender, EventArgs e) {
<font color= "green">            //</font>
<font color= "green">            // CODEGEN: This call is required by the ASP.NET Web Form Designer.</font>
<font color= "green">            //</font>
<font color= "blue">            </font>InitializeComponent();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        </font>#region Web Form Designer generated code
<font color= "green">        ///        Required method for Designer support - do not modify</font>
<font color= "green">        ///        the contents of this method with the code editor.</font>
<font color= "green">        /// </summary></font>
<font color= "blue">        private void</font> InitializeComponent() {
<font color= "blue">            </font>this.Load += new System.EventHandler(this.Page_Load);
<font color= "blue"></font>
<font color= "blue">        </font>}
<font color= "blue">        </font>#endregion
<font color= "blue">    </font>}
<font color= "blue"></font>}
</pre>