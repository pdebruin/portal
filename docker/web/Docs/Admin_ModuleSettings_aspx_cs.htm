<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">using</font> System;
<font color= "blue">using</font> System.Collections;
<font color= "blue">using</font> System.ComponentModel;
<font color= "blue">using</font> System.Data;
<font color= "blue">using</font> System.Drawing;
<font color= "blue">using</font> System.Web;
<font color= "blue">using</font> System.Web.UI;
<font color= "blue">using</font> System.Web.UI.WebControls;
<font color= "blue">using</font> System.Web.UI.HtmlControls;
<font color= "blue">using</font> System.Data.SqlClient;
<font color= "blue"></font>
<font color= "blue">namespace</font> ASPNET.StarterKit.Portal {
<font color= "blue"></font>
<font color= "blue">    public class</font> ModuleSettingsPage : System.Web.UI.Page {
<font color= "blue">        protected </font>System.Web.UI.WebControls.TextBox moduleTitle;
<font color= "blue">        protected </font>System.Web.UI.WebControls.TextBox cacheTime;
<font color= "blue">        protected </font>System.Web.UI.WebControls.CheckBoxList authEditRoles;
<font color= "blue">        protected </font>System.Web.UI.WebControls.CheckBox showMobile;
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton ApplyButton;
<font color= "blue">    </font>
<font color= "blue">        </font>int moduleId = 0;
<font color= "blue">        </font>int tabId = 0;
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The Page_Load server event handler on this page is used</font>
<font color= "green">        // to populate the module settings on the page</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Load(object sender, System.EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Verify that the current user has access to access this page</font>
<font color= "blue"></font><font color= "blue">            if </font>(PortalSecurity.IsInRoles("Admins") == false) {<font color= "blue"></font>
<font color= "blue">                </font>Response.Redirect("~/Admin/EditAccessDenied.aspx");
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // Determine Module to Edit</font>
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["mid"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>moduleId = Int32.Parse(Request.Params["mid"]);
<font color= "blue">            </font>}
<font color= "green">            // Determine Tab to Edit</font>
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["tabid"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>tabId = Int32.Parse(Request.Params["tabid"]);
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(Page.IsPostBack == false) {<font color= "blue"></font>
<font color= "blue">                </font>BindData();
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The ApplyChanges_Click server event handler on this page is used</font>
<font color= "green">        // to save the module settings into the portal configuration system</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> ApplyChanges_Click(Object Sender, EventArgs e) {
<font color= "blue">    </font>
<font color= "green">            // Obtain PortalSettings from Current Context</font>
<font color= "blue">            </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "blue">            </font>object value = GetModule();
<font color= "blue"></font><font color= "blue">            if </font>(value != null) {<font color= "blue"></font>
<font color= "blue">            </font>
<font color= "blue">                </font>ModuleSettings m = (ModuleSettings) value;
<font color= "blue">            </font>
<font color= "green">                // Construct Authorized User Roles String</font>
<font color= "blue">                </font>String editRoles = "";
<font color= "blue"></font>
<font color= "blue">                </font>foreach(ListItem item in authEditRoles.Items) {
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    if </font>(item.Selected == true) {<font color= "blue"></font>
<font color= "blue">                        </font>editRoles = editRoles + item.Text + ";";
<font color= "blue">                    </font>}
<font color= "blue">                </font>}
<font color= "blue">            </font>
<font color= "green">                // update module</font>
<font color= "blue">                </font>Configuration config = new Configuration();
<font color= "blue">                </font>config.UpdateModule(moduleId, m.ModuleOrder, m.PaneName, moduleTitle.Text, Int32.Parse(cacheTime.Text), editRoles, showMobile.Checked);
<font color= "blue"></font>
<font color= "green">                // Update Textbox Settings</font>
<font color= "blue">                </font>moduleTitle.Text = m.ModuleTitle;
<font color= "blue">                </font>cacheTime.Text = m.CacheTime.ToString();
<font color= "blue"></font>
<font color= "green">                // Populate checkbox list with all security roles for this portal</font>
<font color= "green">                // and "check" the ones already configured for this module</font>
<font color= "blue">                </font>RolesDB rolesObj = new RolesDB();
<font color= "blue">                </font>SqlDataReader roles = rolesObj.GetPortalRoles(portalSettings.PortalId);
<font color= "blue"></font>
<font color= "green">                // Clear existing items in checkboxlist</font>
<font color= "blue">                </font>authEditRoles.Items.Clear();
<font color= "blue"></font>
<font color= "blue">                </font>ListItem allItem = new ListItem();
<font color= "blue">                </font>allItem.Text = "All Users";
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                if </font>(m.AuthorizedEditRoles.LastIndexOf("All Users") > -1) {<font color= "blue"></font>
<font color= "blue">                    </font>allItem.Selected = true;
<font color= "blue">                </font>}
<font color= "blue"></font>
<font color= "blue">                </font>authEditRoles.Items.Add(allItem);
<font color= "blue"></font>
<font color= "blue">                </font>while(roles.Read()) {
<font color= "blue"></font>
<font color= "blue">                    </font>ListItem item = new ListItem();
<font color= "blue">                    </font>item.Text = (String) roles["RoleName"];
<font color= "blue">                    </font>item.Value = roles["RoleID"].ToString();
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    if </font>((m.AuthorizedEditRoles.LastIndexOf(item.Text)) > -1) {<font color= "blue"></font>
<font color= "blue">                        </font>item.Selected = true;
<font color= "blue">                    </font>}
<font color= "blue"></font>
<font color= "blue">                    </font>authEditRoles.Items.Add(item);
<font color= "blue">                </font>}
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // Navigate back to admin page</font>
<font color= "blue">            </font>Response.Redirect("TabLayout.aspx?tabid=" + tabId);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The BindData helper method is used to populate a asp:datalist</font>
<font color= "green">        // server control with the current "edit access" permissions</font>
<font color= "green">        // set within the portal configuration system</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> BindData() {
<font color= "blue"></font>
<font color= "green">            // Obtain PortalSettings from Current Context</font>
<font color= "blue">            </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "blue">            </font>object value = GetModule();
<font color= "blue"></font><font color= "blue">            if </font>(value != null) {<font color= "blue"></font>
<font color= "blue">            </font>
<font color= "blue">                </font>ModuleSettings m = (ModuleSettings) value;
<font color= "blue">            </font>
<font color= "green">                // Update Textbox Settings</font>
<font color= "blue">                </font>moduleTitle.Text = m.ModuleTitle;
<font color= "blue">                </font>cacheTime.Text = m.CacheTime.ToString();
<font color= "blue">                </font>showMobile.Checked = m.ShowMobile;
<font color= "blue"></font>
<font color= "green">                // Populate checkbox list with all security roles for this portal</font>
<font color= "green">                // and "check" the ones already configured for this module</font>
<font color= "blue">                </font>RolesDB rolesObj = new RolesDB();
<font color= "blue">                </font>SqlDataReader roles = rolesObj.GetPortalRoles(portalSettings.PortalId);
<font color= "blue"></font>
<font color= "green">                // Clear existing items in checkboxlist</font>
<font color= "blue">                </font>authEditRoles.Items.Clear();
<font color= "blue"></font>
<font color= "blue">                </font>ListItem allItem = new ListItem();
<font color= "blue">                </font>allItem.Text = "All Users";
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                if </font>(m.AuthorizedEditRoles.LastIndexOf("All Users") > -1) {<font color= "blue"></font>
<font color= "blue">                    </font>allItem.Selected = true;
<font color= "blue">                </font>}
<font color= "blue"></font>
<font color= "blue">                </font>authEditRoles.Items.Add(allItem);
<font color= "blue"></font>
<font color= "blue">                </font>while(roles.Read()) {
<font color= "blue"></font>
<font color= "blue">                    </font>ListItem item = new ListItem();
<font color= "blue">                    </font>item.Text = (String) roles["RoleName"];
<font color= "blue">                    </font>item.Value = roles["RoleID"].ToString();
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    if </font>((m.AuthorizedEditRoles.LastIndexOf(item.Text)) > -1) {<font color= "blue"></font>
<font color= "blue">                        </font>item.Selected = true;
<font color= "blue">                    </font>}
<font color= "blue"></font>
<font color= "blue">                    </font>authEditRoles.Items.Add(item);
<font color= "blue">                </font>}
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        private </font>ModuleSettings GetModule() {
<font color= "blue">    </font>
<font color= "green">            // Obtain PortalSettings for this tab</font>
<font color= "blue">            </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "green">            // Obtain selected module data</font>
<font color= "blue">            </font>foreach (ModuleSettings _module in portalSettings.ActiveTab.Modules) {
<font color= "blue">            </font>
<font color= "blue"></font><font color= "blue">                if </font>(_module.ModuleId == moduleId)<font color= "blue"></font>
<font color= "blue">                    return</font> _module;
<font color= "blue">            </font>}
<font color= "blue">            return</font> null;
<font color= "blue">        </font>}
<font color= "blue">        </font>
<font color= "blue">        public </font>ModuleSettingsPage() {
<font color= "blue">            </font>Page.Init += new System.EventHandler(Page_Init);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Init(object sender, EventArgs e) {
<font color= "green">            //</font>
<font color= "green">            // CODEGEN: This call is required by the ASP.NET Web Form Designer.</font>
<font color= "green">            //</font>
<font color= "blue">            </font>InitializeComponent();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        </font>#region Web Form Designer generated code
<font color= "green">        /// <summary></font>
<font color= "green">        /// Required method for Designer support - do not modify</font>
<font color= "green">        /// the contents of this method with the code editor.</font>
<font color= "green">        /// </summary></font>
<font color= "blue">        private void</font> InitializeComponent() {    
<font color= "blue">            </font>this.ApplyButton.Click += new System.EventHandler(this.ApplyChanges_Click);
<font color= "blue">            </font>this.Load += new System.EventHandler(this.Page_Load);
<font color= "blue"></font>
<font color= "blue">        </font>}
<font color= "blue">        </font>#endregion
<font color= "blue">    </font>}
<font color= "blue"></font>}
</pre>