<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">using</font> System;
<font color= "blue">using</font> System.Data;
<font color= "blue">using</font> System.Drawing;
<font color= "blue">using</font> System.Web;
<font color= "blue">using</font> System.Web.UI.WebControls;
<font color= "blue">using</font> System.Web.UI.HtmlControls;
<font color= "blue"></font>
<font color= "blue">namespace</font> ASPNET.StarterKit.Portal {
<font color= "blue">    public </font>abstract class Roles : ASPNET.StarterKit.Portal.PortalModuleControl {
<font color= "blue">        protected </font>System.Web.UI.WebControls.DataList rolesList;
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton AddRoleBtn;
<font color= "blue"></font>
<font color= "blue">        </font>int tabIndex = 0;
<font color= "blue">        </font>int tabId = 0;
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The Page_Load server event handler on this user control is used</font>
<font color= "green">        // to populate the current roles settings from the configuration system</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Load(object sender, System.EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Verify that the current user has access to access this page</font>
<font color= "blue"></font><font color= "blue">            if </font>(PortalSecurity.IsInRoles("Admins") == false) {<font color= "blue"></font>
<font color= "blue">                </font>Response.Redirect("~/Admin/EditAccessDenied.aspx");
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["tabid"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>tabId = Int32.Parse(Request.Params["tabid"]);
<font color= "blue">            </font>}
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["tabindex"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>tabIndex = Int32.Parse(Request.Params["tabindex"]);
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // If this is the first visit to the page, bind the role data to the datalist</font>
<font color= "blue"></font><font color= "blue">            if </font>(Page.IsPostBack == false) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                </font>BindData();
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The AddRole_Click server event handler is used to add</font>
<font color= "green">        // a new security role for this portal</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> AddRole_Click(Object Sender, EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Obtain PortalSettings from Current Context</font>
<font color= "blue">            </font>PortalSettings portalSettings = (PortalSettings) Context.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "green">            // Add a new role to the database</font>
<font color= "blue">            </font>RolesDB roles = new RolesDB();
<font color= "blue">            </font>roles.AddRole(portalSettings.PortalId, "New Role");
<font color= "blue">        </font>
<font color= "green">            // set the edit item index to the last item</font>
<font color= "blue">            </font>rolesList.EditItemIndex = rolesList.Items.Count;
<font color= "blue"></font>
<font color= "green">            // Rebind list</font>
<font color= "blue">            </font>BindData();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The RolesList_ItemCommand server event handler on this page </font>
<font color= "green">        // is used to handle the user editing and deleting roles</font>
<font color= "green">        // from the RolesList asp:datalist control</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> RolesList_ItemCommand(object sender, DataListCommandEventArgs e) {
<font color= "blue"></font>
<font color= "blue">            </font>RolesDB roles = new RolesDB();
<font color= "blue">            </font>int roleId = (int) rolesList.DataKeys[e.Item.ItemIndex];
<font color= "blue">       </font>
<font color= "blue"></font><font color= "blue">            if </font>(e.CommandName == "edit") {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">                // Set editable list item index if "edit" button clicked next to the item</font>
<font color= "blue">                </font>rolesList.EditItemIndex = e.Item.ItemIndex;
<font color= "blue"></font>
<font color= "green">                // Repopulate the datalist control</font>
<font color= "blue">                </font>BindData();
<font color= "blue">            </font>}
<font color= "blue"></font><font color= "blue">            else if </font>(e.CommandName == "apply") {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">                // Apply changes</font>
<font color= "blue">                </font>String _roleName = ((TextBox) e.Item.FindControl("roleName")).Text;
<font color= "blue">            </font>
<font color= "green">                // update database</font>
<font color= "blue">                </font>roles.UpdateRole(roleId, _roleName);
<font color= "blue">            </font>
<font color= "green">                // Disable editable list item access</font>
<font color= "blue">                </font>rolesList.EditItemIndex = -1;
<font color= "blue"></font>
<font color= "green">                // Repopulate the datalist control</font>
<font color= "blue">                </font>BindData();
<font color= "blue">            </font>}
<font color= "blue"></font><font color= "blue">            else if </font>(e.CommandName == "delete") {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">                // update database</font>
<font color= "blue">                </font>roles.DeleteRole(roleId);
<font color= "blue"></font>
<font color= "green">                // Ensure that item is not editable</font>
<font color= "blue">                </font>rolesList.EditItemIndex = -1;
<font color= "blue"></font>
<font color= "green">                // Repopulate list</font>
<font color= "blue">                </font>BindData();
<font color= "blue">            </font>}
<font color= "blue"></font><font color= "blue">            else if </font>(e.CommandName == "members") {<font color= "blue"></font>
<font color= "blue">        </font>
<font color= "green">                // Save role name changes first</font>
<font color= "blue">                </font>String _roleName = ((TextBox) e.Item.FindControl("roleName")).Text;
<font color= "blue">                </font>roles.UpdateRole(roleId, _roleName);
<font color= "blue"></font>
<font color= "green">                // redirect to edit page</font>
<font color= "blue">                </font>Response.Redirect("~/Admin/SecurityRoles.aspx?roleId=" + roleId + "&rolename=" + _roleName + "&tabindex=" + tabIndex + "&tabid=" + tabId);
<font color= "blue">            </font>}        
<font color= "blue">        </font>}
<font color= "blue">    </font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The BindData helper method is used to bind the list of </font>
<font color= "green">        // security roles for this portal to an asp:datalist server control</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> BindData() {
<font color= "blue"></font>
<font color= "green">            // Obtain PortalSettings from Current Context</font>
<font color= "blue">            </font>PortalSettings portalSettings = (PortalSettings) Context.Items["PortalSettings"];
<font color= "blue">        </font>
<font color= "green">            // Get the portal's roles from the database</font>
<font color= "blue">            </font>RolesDB roles = new RolesDB();
<font color= "blue">        </font>
<font color= "blue">            </font>rolesList.DataSource = roles.GetPortalRoles(portalSettings.PortalId);
<font color= "blue">            </font>rolesList.DataBind();
<font color= "blue">        </font>}
<font color= "blue">    </font>
<font color= "blue">        public </font>Roles() {
<font color= "blue">            </font>this.Init += new System.EventHandler(Page_Init);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Init(object sender, EventArgs e) {
<font color= "green">            //</font>
<font color= "green">            // CODEGEN: This call is required by the ASP.NET Web Form Designer.</font>
<font color= "green">            //</font>
<font color= "blue">            </font>InitializeComponent();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        </font>#region Web Form Designer generated code
<font color= "green">        ///        Required method for Designer support - do not modify</font>
<font color= "green">        ///        the contents of this method with the code editor.</font>
<font color= "green">        /// </summary></font>
<font color= "blue">        private void</font> InitializeComponent() {
<font color= "blue">            </font>this.rolesList.ItemCommand += new System.Web.UI.WebControls.DataListCommandEventHandler(this.RolesList_ItemCommand);
<font color= "blue">            </font>this.AddRoleBtn.Click += new System.EventHandler(this.AddRole_Click);
<font color= "blue">            </font>this.Load += new System.EventHandler(this.Page_Load);
<font color= "blue"></font>
<font color= "blue">        </font>}
<font color= "blue">        </font>#endregion
<font color= "blue">    </font>}
<font color= "blue"></font>}
</pre>