<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">using</font> System;
<font color= "blue">using</font> System.Collections;
<font color= "blue">using</font> System.ComponentModel;
<font color= "blue">using</font> System.Data;
<font color= "blue">using</font> System.Drawing;
<font color= "blue">using</font> System.Web;
<font color= "blue">using</font> System.Web.UI;
<font color= "blue">using</font> System.Web.UI.WebControls;
<font color= "blue">using</font> System.Web.UI.HtmlControls;
<font color= "blue">using</font> System.Data.SqlClient;
<font color= "blue"></font>
<font color= "blue">namespace</font> ASPNET.StarterKit.Portal {
<font color= "blue"></font>
<font color= "blue">    public </font>abstract class DesktopPortalBanner : System.Web.UI.UserControl {
<font color= "blue">        protected </font>System.Web.UI.WebControls.Label WelcomeMessage;
<font color= "blue">        protected </font>System.Web.UI.WebControls.Label siteName;
<font color= "blue">        protected </font>System.Web.UI.WebControls.DataList tabs;
<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">        public </font>int          tabIndex;
<font color= "blue">        public </font>bool         ShowTabs = true;
<font color= "blue">        protected </font>String    LogoffLink = "";
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Load(object sender, System.EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Obtain PortalSettings from Current Context</font>
<font color= "blue">            </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "green">            // Dynamically Populate the Portal Site Name</font>
<font color= "blue">            </font>siteName.Text = portalSettings.PortalName;
<font color= "blue"></font>
<font color= "green">            // If user logged in, customize welcome message</font>
<font color= "blue"></font><font color= "blue">            if </font>(Request.IsAuthenticated == true) {<font color= "blue"></font>
<font color= "blue">        </font>
<font color= "blue">                </font>WelcomeMessage.Text = "Welcome " + Context.User.Identity.Name + "! <" + "span class=Accent" + ">|<" + "/span" + ">";
<font color= "blue"></font>
<font color= "green">                // if authentication mode is Cookie, provide a logoff link</font>
<font color= "blue"></font><font color= "blue">                if </font>(Context.User.Identity.AuthenticationType == "Forms") {<font color= "blue"></font>
<font color= "blue">                    </font>LogoffLink = "<" + "span class=\"Accent\">|</span>\n" + "<" + "a href=" + Global.GetApplicationPath(Request) + "/Admin/Logoff.aspx class=SiteLink> Logoff" + "<" + "/a>";
<font color= "blue">                </font>}
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // Dynamically render portal tab strip</font>
<font color= "blue"></font><font color= "blue">            if </font>(ShowTabs == true) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                </font>tabIndex = portalSettings.ActiveTab.TabIndex;
<font color= "blue"></font>
<font color= "green">                // Build list of tabs to be shown to user                                   </font>
<font color= "blue">                </font>ArrayList authorizedTabs = new ArrayList();
<font color= "blue">                </font>int addedTabs = 0;
<font color= "blue"></font>
<font color= "blue">                for</font> (int i=0; i < portalSettings.DesktopTabs.Count; i++) {
<font color= "blue">            </font>
<font color= "blue">                    </font>TabStripDetails tab = (TabStripDetails)portalSettings.DesktopTabs[i];
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    if </font>(PortalSecurity.IsInRoles(tab.AuthorizedRoles)) { <font color= "blue"></font>
<font color= "blue">                        </font>authorizedTabs.Add(tab);
<font color= "blue">                    </font>}
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                    if </font>(addedTabs == tabIndex) {<font color= "blue"></font>
<font color= "blue">                        </font>tabs.SelectedIndex = addedTabs;
<font color= "blue">                    </font>}
<font color= "blue"></font>
<font color= "blue">                    </font>addedTabs++;
<font color= "blue">                </font>}          
<font color= "blue"></font>
<font color= "green">                // Populate Tab List at Top of the Page with authorized tabs</font>
<font color= "blue">                </font>tabs.DataSource = authorizedTabs;
<font color= "blue">                </font>tabs.DataBind();
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue">        </font>
<font color= "blue">        public </font>DesktopPortalBanner() {
<font color= "blue">            </font>this.Init += new System.EventHandler(Page_Init);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Init(object sender, EventArgs e) {
<font color= "green">            //</font>
<font color= "green">            // CODEGEN: This call is required by the ASP.NET Web Form Designer.</font>
<font color= "green">            //</font>
<font color= "blue">            </font>InitializeComponent();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        </font>#region Web Form Designer generated code
<font color= "green">        ///        Required method for Designer support - do not modify</font>
<font color= "green">        ///        the contents of this method with the code editor.</font>
<font color= "green">        /// </summary></font>
<font color= "blue">        private void</font> InitializeComponent() {
<font color= "blue">            </font>this.Load += new System.EventHandler(this.Page_Load);
<font color= "blue"></font>
<font color= "blue">        </font>}
<font color= "blue">        </font>#endregion
<font color= "blue">    </font>}
<font color= "blue"></font>}
</pre>