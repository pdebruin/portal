<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">using</font> System;
<font color= "blue">using</font> System.Collections;
<font color= "blue">using</font> System.ComponentModel;
<font color= "blue">using</font> System.Data;
<font color= "blue">using</font> System.Drawing;
<font color= "blue">using</font> System.Web;
<font color= "blue">using</font> System.Web.UI;
<font color= "blue">using</font> System.Web.UI.WebControls;
<font color= "blue">using</font> System.Web.UI.HtmlControls;
<font color= "blue">using</font> System.Data.SqlClient;
<font color= "blue"></font>
<font color= "blue">namespace</font> ASPNET.StarterKit.Portal {
<font color= "blue"></font>
<font color= "blue">    public class</font> DiscussDetails : System.Web.UI.Page {
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton ReplyBtn;
<font color= "blue">        protected </font>System.Web.UI.WebControls.Panel ButtonPanel;
<font color= "blue">        protected </font>System.Web.UI.WebControls.TextBox TitleField;
<font color= "blue">        protected </font>System.Web.UI.WebControls.TextBox BodyField;
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton updateButton;
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton cancelButton;
<font color= "blue">        protected </font>System.Web.UI.WebControls.Panel EditPanel;
<font color= "blue">        protected </font>System.Web.UI.WebControls.Label Title;
<font color= "blue">        protected </font>System.Web.UI.WebControls.Label CreatedByUser;
<font color= "blue">        protected </font>System.Web.UI.WebControls.Label CreatedDate;
<font color= "blue">        protected </font>System.Web.UI.WebControls.Label Body;
<font color= "blue">        protected </font>System.Web.UI.HtmlControls.HtmlAnchor prevItem;
<font color= "blue">        protected </font>System.Web.UI.HtmlControls.HtmlAnchor nextItem;
<font color= "blue">    </font>
<font color= "blue"></font>
<font color= "blue">        </font>int moduleId = 0;
<font color= "blue">        </font>int itemId = 0;
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The Page_Load server event handler on this page is used</font>
<font color= "green">        // to obtain the ModuleId and ItemId of the discussion list,</font>
<font color= "green">        // and to then display the message contents.</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Load(object sender, System.EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Obtain moduleId and ItemId from QueryString</font>
<font color= "blue">            </font>moduleId = Int32.Parse(Request.Params["Mid"]);
<font color= "blue">        </font>
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["ItemId"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>itemId = Int32.Parse(Request.Params["ItemId"]);
<font color= "blue">            </font>}
<font color= "blue"></font><font color= "blue">            else </font>{<font color= "blue"></font>
<font color= "blue">                </font>itemId = 0;
<font color= "blue">                </font>EditPanel.Visible = true;
<font color= "blue">                </font>ButtonPanel.Visible = false;
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // Populate message contents if this is the first visit to the page</font>
<font color= "blue"></font><font color= "blue">            if </font>(Page.IsPostBack == false) {<font color= "blue"></font>
<font color= "blue">                </font>BindData();
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(PortalSecurity.HasEditPermissions(moduleId) == false) {<font color= "blue"></font>
<font color= "blue">        </font>
<font color= "blue"></font><font color= "blue">                if </font>(itemId == 0) {<font color= "blue"></font>
<font color= "blue">                    </font>Response.Redirect("~/Admin/EditAccessDenied.aspx");
<font color= "blue">                </font>}
<font color= "blue"></font><font color= "blue">                else </font>{<font color= "blue"></font>
<font color= "blue">                    </font>ReplyBtn.Visible=false;
<font color= "blue">                </font>}
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The ReplyBtn_Click server event handler on this page is used</font>
<font color= "green">        // to handle the scenario where a user clicks the message's</font>
<font color= "green">        // "Reply" button to perform a post.</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        void</font> ReplyBtn_Click(Object Sender, EventArgs e) {
<font color= "blue"></font>
<font color= "blue">            </font>EditPanel.Visible = true;
<font color= "blue">            </font>ButtonPanel.Visible = false;
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The UpdateBtn_Click server event handler on this page is used</font>
<font color= "green">        // to handle the scenario where a user clicks the "update"</font>
<font color= "green">        // button after entering a response to a message post.</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        void</font> UpdateBtn_Click(Object sender, EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Create new discussion database component</font>
<font color= "blue">            </font>DiscussionDB discuss = new DiscussionDB();
<font color= "blue"></font>
<font color= "green">            // Add new message (updating the "itemId" on the page)</font>
<font color= "blue">            </font>itemId = discuss.AddMessage(moduleId, itemId, User.Identity.Name, Server.HtmlEncode(TitleField.Text), Server.HtmlEncode(BodyField.Text));
<font color= "blue"></font>
<font color= "green">            // Update visibility of page elements</font>
<font color= "blue">            </font>EditPanel.Visible = false;
<font color= "blue">            </font>ButtonPanel.Visible = true;
<font color= "blue"></font>
<font color= "green">            // Repopulate page contents with new message</font>
<font color= "blue">            </font>BindData();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The CancelBtn_Click server event handler on this page is used</font>
<font color= "green">        // to handle the scenario where a user clicks the "cancel"</font>
<font color= "green">        // button to discard a message post and toggle out of</font>
<font color= "green">        // edit mode.</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        void</font> CancelBtn_Click(Object sender, EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Update visibility of page elements</font>
<font color= "blue">            </font>EditPanel.Visible = false;
<font color= "blue">            </font>ButtonPanel.Visible = true;
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The BindData method is used to obtain details of a message</font>
<font color= "green">        // from the Discussion table, and update the page with</font>
<font color= "green">        // the message content.</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        void</font> BindData() {
<font color= "blue"></font>
<font color= "green">            // Obtain the selected item from the Discussion table</font>
<font color= "blue">            </font>ASPNET.StarterKit.Portal.DiscussionDB discuss = new ASPNET.StarterKit.Portal.DiscussionDB();
<font color= "blue">            </font>SqlDataReader dr = discuss.GetSingleMessage(itemId);
<font color= "blue">        </font>
<font color= "green">            // Load first row from database</font>
<font color= "blue">            </font>dr.Read();
<font color= "blue"></font>
<font color= "green">            // Security check.  verify that itemid is within the module.</font>
<font color= "blue">            </font>int dbModuleID = Convert.ToInt32(dr["ModuleID"]);
<font color= "blue"></font><font color= "blue">            if </font>(dbModuleID != moduleId)<font color= "blue"></font>
<font color= "blue">            </font>{
<font color= "blue">                </font>dr.Close();
<font color= "blue">                </font>Response.Redirect("~/Admin/EditAccessDenied.aspx");
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // Update labels with message contents</font>
<font color= "blue">            </font>Title.Text = (String) dr["Title"];
<font color= "blue">            </font>Body.Text = (String) dr["Body"];
<font color= "blue">            </font>CreatedByUser.Text = (String) dr["CreatedByUser"];
<font color= "blue">            </font>CreatedDate.Text = String.Format("{0:d}", dr["CreatedDate"]);
<font color= "blue">            </font>TitleField.Text = ReTitle(Title.Text);
<font color= "blue"></font>
<font color= "blue">            </font>int prevId = 0;
<font color= "blue">            </font>int nextId = 0;
<font color= "blue"></font>
<font color= "green">            // Update next and preview links</font>
<font color= "blue">            </font>object id1 = dr["PrevMessageID"];
<font color= "blue">        </font>
<font color= "blue"></font><font color= "blue">            if </font>(id1 != DBNull.Value) {<font color= "blue"></font>
<font color= "blue">                </font>prevId = (int) id1;
<font color= "blue">                </font>prevItem.HRef = Request.Path + "?ItemId=" + prevId + "&mid=" + moduleId;
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "blue">            </font>object id2 = dr["NextMessageID"];
<font color= "blue">        </font>
<font color= "blue"></font><font color= "blue">            if </font>(id2 != DBNull.Value) {<font color= "blue"></font>
<font color= "blue">                </font>nextId = (int) id2;
<font color= "blue">                </font>nextItem.HRef = Request.Path + "?ItemId=" + nextId + "&mid=" + moduleId;
<font color= "blue">            </font>}
<font color= "blue">        </font>
<font color= "green">            // close the datareader</font>
<font color= "blue">            </font>dr.Close();
<font color= "blue">        </font>
<font color= "green">            // Show/Hide Next/Prev Button depending on whether there is a next/prev message</font>
<font color= "blue"></font><font color= "blue">            if </font>(prevId <= 0) {<font color= "blue"></font>
<font color= "blue">                </font>prevItem.Visible = false;
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(nextId <= 0) {<font color= "blue"></font>
<font color= "blue">                </font>nextItem.Visible = false;
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The ReTitle helper method is used to create the subject</font>
<font color= "green">        // line of a response post to a message.</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        </font>String ReTitle(String title) {
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(title.Length > 0 & title.IndexOf("Re: ",0) == -1) {<font color= "blue"></font>
<font color= "blue">                </font>title = "Re: " + title;
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "blue">            return</font> title;
<font color= "blue">        </font>}
<font color= "blue">        </font>
<font color= "blue">        public </font>DiscussDetails() {
<font color= "blue">            </font>Page.Init += new System.EventHandler(Page_Init);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Init(object sender, EventArgs e) {
<font color= "green">            //</font>
<font color= "green">            // CODEGEN: This call is required by the ASP.NET Web Form Designer.</font>
<font color= "green">            //</font>
<font color= "blue">            </font>InitializeComponent();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        </font>#region Web Form Designer generated code
<font color= "green">        /// <summary></font>
<font color= "green">        /// Required method for Designer support - do not modify</font>
<font color= "green">        /// the contents of this method with the code editor.</font>
<font color= "green">        /// </summary></font>
<font color= "blue">        private void</font> InitializeComponent() {    
<font color= "blue">            </font>this.ReplyBtn.Click += new System.EventHandler(this.ReplyBtn_Click);
<font color= "blue">            </font>this.updateButton.Click += new System.EventHandler(this.UpdateBtn_Click);
<font color= "blue">            </font>this.cancelButton.Click += new System.EventHandler(this.CancelBtn_Click);
<font color= "blue">            </font>this.Load += new System.EventHandler(this.Page_Load);
<font color= "blue"></font>
<font color= "blue">        </font>}
<font color= "blue">        </font>#endregion
<font color= "blue">    </font>}
<font color= "blue"></font>}
</pre>