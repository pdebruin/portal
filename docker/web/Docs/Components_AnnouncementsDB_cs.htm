<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">using</font> System;
<font color= "blue">using</font> System.Configuration;
<font color= "blue">using</font> System.Data;
<font color= "blue">using</font> System.Data.SqlClient;
<font color= "blue"></font>
<font color= "blue">namespace</font> ASPNET.StarterKit.Portal {
<font color= "blue"></font>
<font color= "green">    //*********************************************************************</font>
<font color= "green">    //</font>
<font color= "green">    // AnnounceDB Class</font>
<font color= "green">    //</font>
<font color= "green">    // Class that encapsulates all data logic necessary to add/query/delete</font>
<font color= "green">    // announcements within the Portal database.</font>
<font color= "green">    //</font>
<font color= "green">    //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    public class</font> AnnouncementsDB {
<font color= "blue"></font>
<font color= "green">        //*********************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // GetAnnouncements Method</font>
<font color= "green">        //</font>
<font color= "green">        // The GetAnnouncements method returns a DataSet containing all of the</font>
<font color= "green">        // announcements for a specific portal module from the Announcements</font>
<font color= "green">        // database table.</font>
<font color= "green">        //</font>
<font color= "green">        // NOTE: A DataSet is returned from this method to allow this method to support</font>
<font color= "green">        // both desktop and mobile Web UI.</font>
<font color= "green">        //</font>
<font color= "green">        // Other relevant sources:</font>
<font color= "green">        //     + <a href="GetAnnouncements.htm" style="color:green">GetAnnouncements Stored Procedure</a></font>
<font color= "green">        //</font>
<font color= "green">        //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        public </font>DataSet GetAnnouncements(int moduleId) {
<font color= "blue"></font>
<font color= "green">            // Create Instance of Connection and Command Object</font>
<font color= "blue">            </font>SqlConnection myConnection = new SqlConnection(ConfigurationSettings.AppSettings["connectionString"]);
<font color= "blue">            </font>SqlDataAdapter myCommand = new SqlDataAdapter("Portal_GetAnnouncements", myConnection);
<font color= "blue"></font>
<font color= "green">            // Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.SelectCommand.CommandType = CommandType.StoredProcedure;
<font color= "blue"></font>
<font color= "green">            // Add Parameters to SPROC</font>
<font color= "blue">            </font>SqlParameter parameterModuleId = new SqlParameter("@ModuleID", SqlDbType.Int, 4);
<font color= "blue">            </font>parameterModuleId.Value = moduleId;
<font color= "blue">            </font>myCommand.SelectCommand.Parameters.Add(parameterModuleId);
<font color= "blue"></font>
<font color= "green">            // Create and Fill the DataSet</font>
<font color= "blue">            </font>DataSet myDataSet = new DataSet();
<font color= "blue">            </font>myCommand.Fill(myDataSet);
<font color= "blue"></font>
<font color= "green">            // Return the DataSet</font>
<font color= "blue">            return</font> myDataSet;
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*********************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // GetSingleAnnouncement Method</font>
<font color= "green">        //</font>
<font color= "green">        // The GetSingleAnnouncement method returns a SqlDataReader containing details</font>
<font color= "green">        // about a specific announcement from the Announcements database table.</font>
<font color= "green">        //</font>
<font color= "green">        // Other relevant sources:</font>
<font color= "green">        //     + <a href="GetSingleAnnouncement.htm" style="color:green">GetSingleAnnouncement Stored Procedure</a></font>
<font color= "green">        //</font>
<font color= "green">        //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        public </font>SqlDataReader GetSingleAnnouncement(int itemId) {
<font color= "blue"></font>
<font color= "green">            // Create Instance of Connection and Command Object</font>
<font color= "blue">            </font>SqlConnection myConnection = new SqlConnection(ConfigurationSettings.AppSettings["connectionString"]);
<font color= "blue">            </font>SqlCommand myCommand = new SqlCommand("Portal_GetSingleAnnouncement", myConnection);
<font color= "blue"></font>
<font color= "green">            // Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure;
<font color= "blue"></font>
<font color= "green">            // Add Parameters to SPROC</font>
<font color= "blue">            </font>SqlParameter parameterItemId = new SqlParameter("@ItemID", SqlDbType.Int, 4);
<font color= "blue">            </font>parameterItemId.Value = itemId;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemId);
<font color= "blue"></font>
<font color= "green">            // Execute the command</font>
<font color= "blue">            </font>myConnection.Open();
<font color= "blue">            </font>SqlDataReader result = myCommand.ExecuteReader(CommandBehavior.CloseConnection);
<font color= "blue">            </font>
<font color= "green">            // Return the datareader </font>
<font color= "blue">            return</font> result;
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*********************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // DeleteAnnouncement Method</font>
<font color= "green">        //</font>
<font color= "green">        // The DeleteAnnouncement method deletes the specified announcement from</font>
<font color= "green">        // the Announcements database table.</font>
<font color= "green">        //</font>
<font color= "green">        // Other relevant sources:</font>
<font color= "green">        //     + <a href="DeleteAnnouncement.htm" style="color:green">DeleteAnnouncement Stored Procedure</a></font>
<font color= "green">        //</font>
<font color= "green">        //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        public void</font> DeleteAnnouncement(int itemID) {
<font color= "blue"></font>
<font color= "green">            // Create Instance of Connection and Command Object</font>
<font color= "blue">            </font>SqlConnection myConnection = new SqlConnection(ConfigurationSettings.AppSettings["connectionString"]);
<font color= "blue">            </font>SqlCommand myCommand = new SqlCommand("Portal_DeleteAnnouncement", myConnection);
<font color= "blue"></font>
<font color= "green">            // Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure;
<font color= "blue"></font>
<font color= "green">            // Add Parameters to SPROC</font>
<font color= "blue">            </font>SqlParameter parameterItemID = new SqlParameter("@ItemID", SqlDbType.Int, 4);
<font color= "blue">            </font>parameterItemID.Value = itemID;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemID);
<font color= "blue"></font>
<font color= "blue">            </font>myConnection.Open();
<font color= "blue">            </font>myCommand.ExecuteNonQuery();
<font color= "blue">            </font>myConnection.Close();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*********************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // AddAnnouncement Method</font>
<font color= "green">        //</font>
<font color= "green">        // The AddAnnouncement method adds a new announcement to the</font>
<font color= "green">        // Announcements database table, and returns the ItemId value as a result.</font>
<font color= "green">        //</font>
<font color= "green">        // Other relevant sources:</font>
<font color= "green">        //     + <a href="AddAnnouncement.htm" style="color:green">AddAnnouncement Stored Procedure</a></font>
<font color= "green">        //</font>
<font color= "green">        //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        public </font>int AddAnnouncement(int moduleId, int itemId, String userName, String title, DateTime expireDate, String description, String moreLink, String mobileMoreLink) {
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(userName.Length < 1) {<font color= "blue"></font>
<font color= "blue">                </font>userName = "unknown";
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // Create Instance of Connection and Command Object</font>
<font color= "blue">            </font>SqlConnection myConnection = new SqlConnection(ConfigurationSettings.AppSettings["connectionString"]);
<font color= "blue">            </font>SqlCommand myCommand = new SqlCommand("Portal_AddAnnouncement", myConnection);
<font color= "blue"></font>
<font color= "green">            // Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure;
<font color= "blue"></font>
<font color= "green">            // Add Parameters to SPROC</font>
<font color= "blue">            </font>SqlParameter parameterItemID = new SqlParameter("@ItemID", SqlDbType.Int, 4);
<font color= "blue">            </font>parameterItemID.Direction = ParameterDirection.Output;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemID);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterModuleID = new SqlParameter("@ModuleID", SqlDbType.Int, 4);
<font color= "blue">            </font>parameterModuleID.Value = moduleId;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterModuleID);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterUserName = new SqlParameter("@UserName", SqlDbType.NVarChar, 100);
<font color= "blue">            </font>parameterUserName.Value = userName;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserName);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterTitle = new SqlParameter("@Title", SqlDbType.NVarChar, 150);
<font color= "blue">            </font>parameterTitle.Value = title;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterTitle);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterMoreLink = new SqlParameter("@MoreLink", SqlDbType.NVarChar, 150);
<font color= "blue">            </font>parameterMoreLink.Value = moreLink;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterMoreLink);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterMobileMoreLink = new SqlParameter("@MobileMoreLink", SqlDbType.NVarChar, 150);
<font color= "blue">            </font>parameterMobileMoreLink.Value = mobileMoreLink;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterMobileMoreLink);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterExpireDate = new SqlParameter("@ExpireDate", SqlDbType.DateTime, 8);
<font color= "blue">            </font>parameterExpireDate.Value = expireDate;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterExpireDate);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterDescription = new SqlParameter("@Description", SqlDbType.NVarChar, 2000);
<font color= "blue">            </font>parameterDescription.Value = description;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterDescription);
<font color= "blue"></font>
<font color= "blue">            </font>myConnection.Open();
<font color= "blue">            </font>myCommand.ExecuteNonQuery();
<font color= "blue">            </font>myConnection.Close();
<font color= "blue"></font>
<font color= "blue">            return</font> (int)parameterItemID.Value;
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //*********************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // UpdateAnnouncement Method</font>
<font color= "green">        //</font>
<font color= "green">        // The UpdateAnnouncement method updates the specified announcement within</font>
<font color= "green">        // the Announcements database table.</font>
<font color= "green">        //</font>
<font color= "green">        // Other relevant sources:</font>
<font color= "green">        //     + <a href="UpdateAnnouncement.htm" style="color:green">UpdateAnnouncement Stored Procedure</a></font>
<font color= "green">        //</font>
<font color= "green">        //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        public void</font> UpdateAnnouncement(int moduleId, int itemId, String userName, String title, DateTime expireDate, String description, String moreLink, String mobileMoreLink) {
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(userName.Length < 1) userName = "unknown";<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            // Create Instance of Connection and Command Object</font>
<font color= "blue">            </font>SqlConnection myConnection = new SqlConnection(ConfigurationSettings.AppSettings["connectionString"]);
<font color= "blue">            </font>SqlCommand myCommand = new SqlCommand("Portal_UpdateAnnouncement", myConnection);
<font color= "blue"></font>
<font color= "green">            // Mark the Command as a SPROC</font>
<font color= "blue">            </font>myCommand.CommandType = CommandType.StoredProcedure;
<font color= "blue"></font>
<font color= "green">            // Add Parameters to SPROC</font>
<font color= "blue">            </font>SqlParameter parameterItemID = new SqlParameter("@ItemID", SqlDbType.Int, 4);
<font color= "blue">            </font>parameterItemID.Value = itemId;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterItemID);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterUserName = new SqlParameter("@UserName", SqlDbType.NVarChar, 100);
<font color= "blue">            </font>parameterUserName.Value = userName;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterUserName);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterTitle = new SqlParameter("@Title", SqlDbType.NVarChar, 150);
<font color= "blue">            </font>parameterTitle.Value = title;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterTitle);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterMoreLink = new SqlParameter("@MoreLink", SqlDbType.NVarChar, 150);
<font color= "blue">            </font>parameterMoreLink.Value = moreLink;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterMoreLink);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterMobileMoreLink = new SqlParameter("@MobileMoreLink", SqlDbType.NVarChar, 150);
<font color= "blue">            </font>parameterMobileMoreLink.Value = mobileMoreLink;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterMobileMoreLink);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterExpireDate = new SqlParameter("@ExpireDate", SqlDbType.DateTime, 8);
<font color= "blue">            </font>parameterExpireDate.Value = expireDate;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterExpireDate);
<font color= "blue"></font>
<font color= "blue">            </font>SqlParameter parameterDescription = new SqlParameter("@Description", SqlDbType.NVarChar, 2000);
<font color= "blue">            </font>parameterDescription.Value = description;
<font color= "blue">            </font>myCommand.Parameters.Add(parameterDescription);
<font color= "blue"></font>
<font color= "blue">            </font>myConnection.Open();
<font color= "blue">            </font>myCommand.ExecuteNonQuery();
<font color= "blue">            </font>myConnection.Close();
<font color= "blue">        </font>}
<font color= "blue">    </font>}
<font color= "blue"></font>}
<font color= "blue"></font>
<font color= "blue"></font>
</pre>