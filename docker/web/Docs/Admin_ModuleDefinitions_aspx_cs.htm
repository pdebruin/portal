<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
<font color= "blue">using</font> System;
<font color= "blue">using</font> System.Collections;
<font color= "blue">using</font> System.ComponentModel;
<font color= "blue">using</font> System.Data;
<font color= "blue">using</font> System.Drawing;
<font color= "blue">using</font> System.Web;
<font color= "blue">using</font> System.Web.SessionState;
<font color= "blue">using</font> System.Web.UI;
<font color= "blue">using</font> System.Web.UI.WebControls;
<font color= "blue">using</font> System.Web.UI.HtmlControls;
<font color= "blue">using</font> System.Data.SqlClient;
<font color= "blue"></font>
<font color= "blue">namespace</font> ASPNET.StarterKit.Portal {
<font color= "blue"></font>
<font color= "blue">    public class</font> ModuleDefinitions : System.Web.UI.Page {
<font color= "blue">        protected </font>System.Web.UI.WebControls.TextBox FriendlyName;
<font color= "blue">        protected </font>System.Web.UI.WebControls.RequiredFieldValidator Req1;
<font color= "blue">        protected </font>System.Web.UI.WebControls.TextBox DesktopSrc;
<font color= "blue">        protected </font>System.Web.UI.WebControls.RequiredFieldValidator Req2;
<font color= "blue">        protected </font>System.Web.UI.WebControls.TextBox MobileSrc;
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton updateButton;
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton cancelButton;
<font color= "blue">        protected </font>System.Web.UI.WebControls.LinkButton deleteButton;
<font color= "blue">    </font>
<font color= "blue"></font>
<font color= "blue">        </font>int defId   = -1;
<font color= "blue">        </font>int tabIndex = 0;
<font color= "blue">        </font>int tabId = 0;
<font color= "blue"></font>
<font color= "green">        //*******************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The Page_Load server event handler on this page is used</font>
<font color= "green">        // to populate the role information for the page</font>
<font color= "green">        //</font>
<font color= "green">        //*******************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Load(object sender, System.EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Verify that the current user has access to access this page</font>
<font color= "blue"></font><font color= "blue">            if </font>(PortalSecurity.IsInRoles("Admins") == false) {<font color= "blue"></font>
<font color= "blue">                </font>Response.Redirect("~/Admin/EditAccessDenied.aspx");
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "green">            // Calculate security defId</font>
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["defid"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>defId = Int32.Parse(Request.Params["defid"]);
<font color= "blue">            </font>}
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["tabid"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>tabId = Int32.Parse(Request.Params["tabid"]);
<font color= "blue">            </font>}
<font color= "blue"></font><font color= "blue">            if </font>(Request.Params["tabindex"] != null) {<font color= "blue"></font>
<font color= "blue">                </font>tabIndex = Int32.Parse(Request.Params["tabindex"]);
<font color= "blue">            </font>}
<font color= "blue"></font>
<font color= "blue">        </font>
<font color= "green">            // If this is the first visit to the page, bind the definition data </font>
<font color= "blue"></font><font color= "blue">            if </font>(Page.IsPostBack == false) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">                if </font>(defId == -1) {<font color= "blue"></font>
<font color= "blue">            </font>
<font color= "green">                    // new module definition</font>
<font color= "blue">                    </font>FriendlyName.Text = "New Definition";
<font color= "blue">                    </font>DesktopSrc.Text = "DesktopModules/SomeModule.ascx";
<font color= "blue">                    </font>MobileSrc.Text = "MobileModules/SomeModule.ascx";
<font color= "blue">                </font>}
<font color= "blue"></font><font color= "blue">                else </font>{<font color= "blue"></font>
<font color= "blue">            </font>
<font color= "green">                    // Obtain the module definition to edit from the database</font>
<font color= "blue">                    </font>Configuration config = new Configuration();
<font color= "blue">                    </font>SiteConfiguration.ModuleDefinitionRow modDefRow = config.GetSingleModuleDefinition(defId);
<font color= "blue"></font>
<font color= "green">                    // Read in information</font>
<font color= "blue">                    </font>FriendlyName.Text = modDefRow.FriendlyName;
<font color= "blue">                    </font>DesktopSrc.Text = modDefRow.DesktopSourceFile;
<font color= "blue">                    </font>MobileSrc.Text = modDefRow.MobileSourceFile;
<font color= "blue">                </font>}
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //****************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The UpdateBtn_Click event handler on this Page is used to either</font>
<font color= "green">        // create or update a link.  It  uses the ASPNET.StarterKit.Portal.LinkDB()</font>
<font color= "green">        // data component to encapsulate all data functionality.</font>
<font color= "green">        //</font>
<font color= "green">        //****************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> UpdateBtn_Click(Object sender, EventArgs e) {
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(Page.IsValid == true) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                </font>Configuration config = new Configuration();
<font color= "blue">            </font>
<font color= "blue"></font><font color= "blue">                if </font>(defId == -1) {<font color= "blue"></font>
<font color= "blue">            </font>
<font color= "green">                    // Obtain PortalSettings from Current Context</font>
<font color= "blue">                    </font>PortalSettings portalSettings = (PortalSettings) Context.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "green">                    // Add a new module definition to the database</font>
<font color= "blue">                    </font>config.AddModuleDefinition(portalSettings.PortalId, FriendlyName.Text, DesktopSrc.Text, MobileSrc.Text);
<font color= "blue">                </font>}
<font color= "blue"></font><font color= "blue">                else </font>{<font color= "blue"></font>
<font color= "blue">            </font>
<font color= "green">                    // update the module definition</font>
<font color= "blue">                    </font>config.UpdateModuleDefinition(defId, FriendlyName.Text, DesktopSrc.Text, MobileSrc.Text);
<font color= "blue">                </font>}
<font color= "blue">            </font>
<font color= "green">                // Redirect back to the portal admin page</font>
<font color= "blue">                </font>Response.Redirect("~/DesktopDefault.aspx?tabindex=" + tabIndex + "&tabid=" + tabId);
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //****************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The DeleteBtn_Click event handler on this Page is used to delete an</font>
<font color= "green">        // a link.  It  uses the ASPNET.StarterKit.Portal.LinksDB()</font>
<font color= "green">        // data component to encapsulate all data functionality.</font>
<font color= "green">        //</font>
<font color= "green">        //****************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> DeleteBtn_Click(Object sender, EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // delete definition</font>
<font color= "blue">            </font>Configuration config = new Configuration();
<font color= "blue">            </font>config.DeleteModuleDefinition(defId);
<font color= "blue"></font>
<font color= "green">            // Redirect back to the portal admin page</font>
<font color= "blue">            </font>Response.Redirect("~/DesktopDefault.aspx?tabindex=" + tabIndex + "&tabid=" + tabId);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        //****************************************************************</font>
<font color= "green">        //</font>
<font color= "green">        // The CancelBtn_Click event handler on this Page is used to cancel</font>
<font color= "green">        // out of the page -- and return the user back to the portal home</font>
<font color= "green">        // page.</font>
<font color= "green">        //</font>
<font color= "green">        //****************************************************************</font>
<font color= "blue"></font>
<font color= "blue">        private void</font> CancelBtn_Click(Object sender, EventArgs e) {
<font color= "blue"></font>
<font color= "green">            // Redirect back to the portal home page</font>
<font color= "blue">            </font>Response.Redirect("~/DesktopDefault.aspx?tabindex=" + tabIndex + "&tabid=" + tabId);
<font color= "blue">        </font>}
<font color= "blue">        </font>
<font color= "blue">        public </font>ModuleDefinitions() {
<font color= "blue">            </font>Page.Init += new System.EventHandler(Page_Init);
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        private void</font> Page_Init(object sender, EventArgs e) {
<font color= "green">            //</font>
<font color= "green">            // CODEGEN: This call is required by the ASP.NET Web Form Designer.</font>
<font color= "green">            //</font>
<font color= "blue">            </font>InitializeComponent();
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "blue">        </font>#region Web Form Designer generated code
<font color= "green">        /// <summary></font>
<font color= "green">        /// Required method for Designer support - do not modify</font>
<font color= "green">        /// the contents of this method with the code editor.</font>
<font color= "green">        /// </summary></font>
<font color= "blue">        private void</font> InitializeComponent() {    
<font color= "blue">            </font>this.updateButton.Click += new System.EventHandler(this.UpdateBtn_Click);
<font color= "blue">            </font>this.cancelButton.Click += new System.EventHandler(this.CancelBtn_Click);
<font color= "blue">            </font>this.deleteButton.Click += new System.EventHandler(this.DeleteBtn_Click);
<font color= "blue">            </font>this.Load += new System.EventHandler(this.Page_Load);
<font color= "blue"></font>
<font color= "blue">        </font>}
<font color= "blue">        </font>#endregion
<font color= "blue">    </font>}
<font color= "blue"></font>}
</pre>